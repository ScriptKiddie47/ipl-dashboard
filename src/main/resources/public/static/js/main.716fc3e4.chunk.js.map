{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/teampage.js","components/YearSelector.js","pages/matchPage.js","components/TeamTile.js","pages/homePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailedCard","match","teamName","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","fetchMatches","a","fetch","process","response","json","data","title","value","totalMatches","totalWins","color","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.716fc3e4.chunk.js","sourcesContent":["import { React } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './MatchDetailCard.scss'\r\n\r\nexport const MatchDetailedCard = ({ match, teamName }) => {\r\n    if (!match) return null;\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1\r\n    const otherTeamRoute = `/teams/${otherTeam}`\r\n    const isMatchWon = teamName === match.matchWinner;\r\n\r\n    return (\r\n        <div className={isMatchWon ? ' MatchDetailedCard won-card' : ' MatchDetailedCard lost-card'}>\r\n            <div>\r\n                <span>vs</span>\r\n                <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n\r\n                <h2 className=\"match-date\"> {match.date}</h2>\r\n\r\n                <h3 className=\"match-venue\">at {match.venue}</h3>\r\n\r\n                <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\r\n            </div>\r\n            <div className=\"additional-detail\">\r\n                <h3>First Innings</h3>\r\n                <p>{match.team1}</p>\r\n                <h3>Second Innings</h3>\r\n                <p>{match.team2}</p>\r\n                <h3>Man of the Match</h3>\r\n                <p>{match.playerOfMatch}</p>\r\n                <h3>Umpires</h3>\r\n                <p>{match.umpire1} , {match.umpire1}</p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import { React } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './MatchSmallCard.scss';\r\n\r\nexport const MatchSmallCard = ({ match, teamName }) => {\r\n    if (!match) return null;\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n    const otherTeamRoute = `/teams/${otherTeam}`\r\n    const isMatchWon = teamName === match.matchWinner;\r\n\r\n    return (\r\n        <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\r\n\r\n            <span className=\"vs\">vs</span>\r\n\r\n            <h1>\r\n                <Link to={otherTeamRoute}>{otherTeam}</Link>\r\n            </h1>\r\n\r\n            <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n        </div >\r\n    );\r\n}","import { React, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router';\r\nimport { MatchDetailedCard } from '../components/MatchDetailCard';\r\nimport { MatchSmallCard } from '../components/MatchSmallCard';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport { Link } from 'react-router-dom';\r\nimport './teamPage.scss';\r\n\r\nexport const TeamPage = () => {\r\n\r\n    //Need a Explanation on this \r\n    const [team, setTeam] = useState({ matches: [] });\r\n    const { teamName } = useParams() //Fetched from route call\r\n    useEffect(\r\n        () => {\r\n            const fetchMatches = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\r\n                const data = await response.json();\r\n                setTeam(data);\r\n            };\r\n            fetchMatches();\r\n        }, [teamName]\r\n        //Call the Hook when Team Name changes \r\n        //Earlier [] , now [ teamName ]\r\n    );\r\n\r\n    if (!team || !team.teamName) return <h2>Team not Found</h2>\r\n\r\n    return (\r\n        <div className=\"TeamPage\">\r\n\r\n            <div className=\"team-name-section\">\r\n                <h1 className=\"team-name\">{team.teamName}</h1>\r\n            </div>\r\n\r\n            <div className=\"win-loss-section\">Wins / Losses\r\n                <PieChart\r\n                    data={[\r\n                        { title: 'Losses', value: team.totalMatches - team.totalWins, color: '#a34d5d' },\r\n                        { title: 'Wins', value: team.totalWins, color: '#4da375' }\r\n                    ]}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"match-detail-section\">\r\n                <h3>Latest Matches</h3>\r\n                <MatchDetailedCard teamName={team.teamName} match={team.matches[0]} />\r\n            </div>\r\n\r\n            {team.matches.slice(1).map(match =>\r\n                <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />)}\r\n\r\n            <div className=\"more-link\">\r\n                <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More {'>'}</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n//export default teamPage;\r\n//Specfic Export as to whomever importing it has to specify the name\r\n// function teamPage() { will be changed to export const TeamPage = () => {","import { React } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './YearSelector.scss';\r\n\r\nexport const YearSelector = ({ teamName }) => {\r\n\r\n    let years = [];\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n    for (let i = startYear; i <= endYear; i++) {\r\n        years.push(i);\r\n    }\r\n\r\n    return (\r\n        <ol className=\"YearSelector\">\r\n            {years.map(year =>\r\n                <li key={year}>\r\n                    <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\r\n                </li>\r\n            )\r\n            }\r\n        </ol>\r\n    )\r\n}","import { React, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router';\r\nimport { MatchDetailedCard } from '../components/MatchDetailCard';\r\nimport { YearSelector } from '../components/YearSelector';\r\nimport './matchpage.scss';\r\n\r\nexport const MatchPage = () => {\r\n\r\n    const [matches, setMatches] = useState([])\r\n    const { teamName, year } = useParams() //Fetched from route call\r\n    useEffect(\r\n        () => {\r\n            const fetchMatches = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\r\n                const data = await response.json();\r\n                setMatches(data);\r\n            };\r\n            fetchMatches();\r\n        }, [teamName, year]\r\n    );\r\n\r\n\r\n    return (\r\n        <div className=\"MatchPage\">\r\n            <div className=\"year-selector\">\r\n                <h3>Select Year</h3>\r\n                <YearSelector teamName={teamName} />\r\n            </div>\r\n            <div>\r\n                <h1 className=\"page-heading\">{teamName} Matches in Year {year}</h1>\r\n                {\r\n                    matches.map(match =>\r\n                        <MatchDetailedCard key={match.id} teamName={teamName} match={match} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { React } from \"react\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './TeamTile.scss';\r\nexport const TeamTile = ({ teamName }) => {\r\n    return (\r\n        <div className=\"team-tile\">\r\n\r\n            <h1>\r\n                <Link to={`/teams/${teamName}`}>{teamName}</Link>\r\n            </h1>\r\n\r\n        </div>\r\n    );\r\n}","import { React, useEffect, useState } from 'react'\r\nimport { TeamTile } from '../components/TeamTile';\r\nimport './homePage.scss';\r\nexport const HomePage = () => {\r\n\r\n    const [teams, setTeams] = useState([])\r\n    useEffect(\r\n        () => {\r\n            const fetchAllTeams = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\r\n                const data = await response.json();\r\n                setTeams(data);\r\n            };\r\n            fetchAllTeams();\r\n        }, []\r\n    );\r\n\r\n    return (\r\n        <div className=\"home-page\">\r\n            <div className=\"header-section\">\r\n                <h1 className=\"app-name\">ipl-dashboard</h1>\r\n            </div>\r\n            <div className=\"team-grid\">\r\n                {\r\n                    teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n//export default teamPage;\r\n//Specfic Export as to whomever importing it has to specify the name\r\n// function teamPage() { will be changed to export const TeamPage = () => {","import './App.scss';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { TeamPage } from './pages/teampage';\nimport { MatchPage } from './pages/matchPage';\nimport { HomePage } from './pages/homePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/teams/:teamName/matches/:year\">\n            <MatchPage />\n          </Route>\n          <Route path=\"/teams/:teamName\">\n            <TeamPage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n//Lets Use the TeamPage Component for the Heading","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}